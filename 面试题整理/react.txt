react都有一些什么生命周期函数?

创建的时候：
1.componentWillMount
2.componentDidMount

更新的时候:
1.UNSAFE_componentWillReciveProps   => static getDerivedStateFromProps
2.shouldCompanentUpdate
3.componentWillUpdate
    getSnapshotBeforeUpdate
4.componentDidUpdate

销毁阶段:
componentWillUnmount

-----------------------------------------------------------
react的diff原理是什么样的?
1.同级节点进行比较，如果不是，不能够复用。
2.不同类型的元素不能复用。
3.元素类型相同且key相同能复用。

（展示我的实验源码）

-----------------------------------------------------------
setState 在异步函数里的行为是什么样的？
在异步函数里setState并不受react的事件合并逻辑（防抖）的控制，所以setState在
异步函数里是同步执行的。

-----------------------------------------------------------
react的事件合并是什么?
react的事件合并是指react为了避免多次更改状态引发更新并进一步引发不必要的dom回流和重绘
引入的一个防抖机制。实现方法是在document节点上实现了一个全局事件代理，对react能控制的
事件及其内部使用的setState进行托管。

-----------------------------------------------------------
谈谈react在16版本之后引入的fiber架构。
fiber架构由一个链表和一套可被打断的dom更新机制组成。
react在原来的vdom生成的基础上，生成了一套链表结构，这样一来可以把原本树状的结构变成
扁平的数据结构，好处是在更新的时候后可以配合requestIdelCallback对要进行更新的任务实现断
点更新。

-----------------------------------------------------------
谈谈concorrent机制
在实现fiber以及断点更新的情况下，react可以推断用户更急需那个模块的功能，它有一套任务优先处
理机制保证用户急需功能的模块最先更新完成。

-----------------------------------------------------------
react的函数组件和类组件有什么不同。
类组件集成了一系列生命周期的钩子以及状态的管理。
函数组件只是单纯作为render函数存在，省略了构造器等class的组成部件,并且需要别的api例如useState
这样的api帮助托管它的状态,或者useEffect来帮助托管它的生命周期的处理。

-----------------------------------------------------------
知道高阶组件吗？
用于react函数式编程的装饰器模式。
可以对现有的组件进行反向继承，通过这样的方式，在不修改现有组件的代码的情况下，对现有组件的功能进行
修改或者扩展


-----------------------------------------------------------
新的生命周期函数有哪些？
static getDerivedStateFromProps，用于替代之前的componentWillReciveProps ,在react更新了16版本
之后引入了fiber以及reconcile事务调度的机制，原有的componentWillReciveProps容易触发好几遍，所以使
用这个代替,它的作用是当当前组件的props需要更新的时候，进入到这个钩子里，然后返回新的state,新的state
将被更新函数接受并合并到现有的状态里去。
getSnapshotBeforeUpdate,用于访问更新前的dom节点,它的返回值会直接给到componentDidUpdate去处理






